import java.io.*;
import ddf.minim.*;
import ddf.minim.analysis.FFT;

public class AudioModifier {
	public Minim m;
	AudioPlayer player;

	public AudioModifier(String s) {
		m = new Minim(this);
	}

	public String sketchPath(String fileName) {
		return fileName;
	}

	public InputStream createInput(String fileName)  {
		 	try {
		 		return new FileInputStream(new File("river flows in you.wav"));
		 		
		 	} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		 	return null;
		 
	}
	
	public static void main(String[] args) {
		String name = "river flows in you.wav";
		AudioPlayer player = new AudioModifier(name).m.loadFile(name);
		//player.play();
		Double d;
		double[] song = StdAudio.read("river flows in you.wav");
        
		// new array "twice as fast" "to make normal"
		double[] sounds = new double[song.length/2];
        for (int i = 0; i < song.length/2 ; i++) {
            sounds[i] = song[2*i];
        }
        
        int timeSize = 1024;
        int len = sounds.length/timeSize;
		
        float[][] samples = new float[len][timeSize];
        for (int i = 0; i < len; i++) {
        	System.out.println(i);
            for (int j = 0; j < timeSize; j++) {
            	d = new Double(sounds[i*1024 + j]);
            	samples[i][j] = d.floatValue();
            	//System.out.println(((2*i*timeSize) + (2*j)) + "  " + sounds[i][j]);
            }
        }
        
        /*
        for (int i = 0 ; i < samples.length; i++ ){
        	for (int j = 0; j < samples[0].length; j++) {
        		StdAudio.play(samples[i][j]);
        		//System.out.println(sounds[i][j]);
        	}
        }
        */
        FFT transformer = new FFT(1024, 44100);
        for (int i = 0; i < song.length/1024; i++) {
        	transformer.forward(samples[i]);
        }
        for (int i = 0; i < 1024; i++) {
        	System.out.println(samples[10000][i]);
        }
        System.out.println("Done");
	}

}
